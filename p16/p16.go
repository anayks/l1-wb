package main

import (
	"fmt"
	"math/rand"
)

type arr []int

func main() {
	newArr := arr{4, 5, 6, 3, 4, 3, 1, 0, 222, 2255, 55, 22}
	fmt.Printf("Result: %v", newArr.Sort())
}

func (a arr) Sort() []int {
	length := len(a)

	if length < 2 { // если длина меньше 2 элементов - нет смысла сортировать
		return a
	}

	left, right := 0, length-1 // берем крайний левый и крайний правый элемент

	pivot := rand.Int() % length // берем случайный номер элемента, вокруг которого будем сортировать

	a[pivot], a[right] = a[right], a[pivot] // ставим этот случайный элемент последним

	for i := range a {
		if a[i] < a[right] { // в цикле проверяем, является ли элемент i меньше, чем выбранный нами элемент
			a[left], a[i] = a[i], a[left] // ставим этот элемент i в начало, крайний слева на его место
			left++                        //позицию крайнего слева элемента (наименьшего) сдвигаем на одно значение больше
		}
	}

	a[left], a[right] = a[right], a[left] // Меняем наименьшее левое и крайнее правое значение (чтобы потом сортировать "вокруг" него)

	a[:left].Sort()   // сортируем левую часть
	a[left+1:].Sort() // сортируем правую часть

	return a
}
